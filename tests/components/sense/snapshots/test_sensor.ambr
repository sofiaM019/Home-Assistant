# serializer version: 1
# name: test_sensors[sensor.car_bill_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.car_bill_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:car-electric',
    'original_name': 'Bill energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_energy',
    'unique_id': '12345-abc123-bill-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.car_bill_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Car Bill energy',
      'icon': 'mdi:car-electric',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.car_bill_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.car_daily_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.car_daily_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:car-electric',
    'original_name': 'Daily energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_energy',
    'unique_id': '12345-abc123-daily-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.car_daily_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Car Daily energy',
      'icon': 'mdi:car-electric',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.car_daily_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '500',
  })
# ---
# name: test_sensors[sensor.car_monthly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.car_monthly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:car-electric',
    'original_name': 'Monthly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_energy',
    'unique_id': '12345-abc123-monthly-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.car_monthly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Car Monthly energy',
      'icon': 'mdi:car-electric',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.car_monthly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.car_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.car_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:car-electric',
    'original_name': 'Power',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12345-abc123-usage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensors[sensor.car_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'power',
      'friendly_name': 'Car Power',
      'icon': 'mdi:car-electric',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.car_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_sensors[sensor.car_weekly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.car_weekly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:car-electric',
    'original_name': 'Weekly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_energy',
    'unique_id': '12345-abc123-weekly-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.car_weekly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Car Weekly energy',
      'icon': 'mdi:car-electric',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.car_weekly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.car_yearly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.car_yearly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:car-electric',
    'original_name': 'Yearly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_energy',
    'unique_id': '12345-abc123-yearly-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.car_yearly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Car Yearly energy',
      'icon': 'mdi:car-electric',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.car_yearly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.oven_bill_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_bill_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:stove',
    'original_name': 'Bill energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_energy',
    'unique_id': '12345-def456-bill-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.oven_bill_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Oven Bill energy',
      'icon': 'mdi:stove',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_bill_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.oven_daily_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_daily_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:stove',
    'original_name': 'Daily energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_energy',
    'unique_id': '12345-def456-daily-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.oven_daily_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Oven Daily energy',
      'icon': 'mdi:stove',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_daily_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '42',
  })
# ---
# name: test_sensors[sensor.oven_monthly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_monthly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:stove',
    'original_name': 'Monthly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_energy',
    'unique_id': '12345-def456-monthly-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.oven_monthly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Oven Monthly energy',
      'icon': 'mdi:stove',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_monthly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.oven_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:stove',
    'original_name': 'Power',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '12345-def456-usage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensors[sensor.oven_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'power',
      'friendly_name': 'Oven Power',
      'icon': 'mdi:stove',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '50.0',
  })
# ---
# name: test_sensors[sensor.oven_weekly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_weekly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:stove',
    'original_name': 'Weekly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_energy',
    'unique_id': '12345-def456-weekly-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.oven_weekly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Oven Weekly energy',
      'icon': 'mdi:stove',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_weekly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.oven_yearly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.oven_yearly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:stove',
    'original_name': 'Yearly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_energy',
    'unique_id': '12345-def456-yearly-energy',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.oven_yearly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Oven Yearly energy',
      'icon': 'mdi:stove',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.oven_yearly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.0',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_bill_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Bill energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_usage',
    'unique_id': '12345-bill-usage',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Bill energy',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_bill_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_bill_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Bill from grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_from_grid',
    'unique_id': '12345-bill-from_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Bill from grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_bill_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_net_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_bill_net_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Bill net production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_net_production',
    'unique_id': '12345-bill-net_production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_net_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Bill net production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_bill_net_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_net_production_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_bill_net_production_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bill net production ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_production_pct',
    'unique_id': '12345-bill-production_pct',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_net_production_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Bill net production ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_bill_net_production_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_bill_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Bill production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_production',
    'unique_id': '12345-bill-production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Bill production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_bill_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_solar_powered_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_bill_solar_powered_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bill solar powered ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_solar_powered',
    'unique_id': '12345-bill-solar_powered',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_solar_powered_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Bill solar powered ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_bill_solar_powered_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_to_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_bill_to_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Bill to grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bill_to_grid',
    'unique_id': '12345-bill-to_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_bill_to_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Bill to grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_bill_to_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_daily_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Daily energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_usage',
    'unique_id': '12345-daily-usage',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Daily energy',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_daily_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_daily_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Daily from grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_from_grid',
    'unique_id': '12345-daily-from_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Daily from grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_daily_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_net_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_daily_net_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Daily net production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_net_production',
    'unique_id': '12345-daily-net_production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_net_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Daily net production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_daily_net_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_net_production_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_daily_net_production_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Daily net production ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_production_pct',
    'unique_id': '12345-daily-production_pct',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_net_production_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Daily net production ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_daily_net_production_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_daily_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Daily production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_production',
    'unique_id': '12345-daily-production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Daily production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_daily_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_solar_powered_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_daily_solar_powered_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Daily solar powered ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_solar_powered',
    'unique_id': '12345-daily-solar_powered',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_solar_powered_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Daily solar powered ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_daily_solar_powered_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_to_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_daily_to_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Daily to grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'daily_to_grid',
    'unique_id': '12345-daily-to_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_daily_to_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Daily to grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_daily_to_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'active_usage',
    'unique_id': '12345-active-usage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'power',
      'friendly_name': 'Sense 12345 Energy',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensors[sensor.sense_12345_l1_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_l1_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'L1 voltage',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'voltage_0',
    'unique_id': '12345-L1',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_l1_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'voltage',
      'friendly_name': 'Sense 12345 L1 voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_l1_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '120',
  })
# ---
# name: test_sensors[sensor.sense_12345_l2_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_l2_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'L2 voltage',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'voltage_1',
    'unique_id': '12345-L2',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_l2_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'voltage',
      'friendly_name': 'Sense 12345 L2 voltage',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_l2_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '240',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_monthly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Monthly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_usage',
    'unique_id': '12345-monthly-usage',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Monthly energy',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_monthly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_monthly_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Monthly from grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_from_grid',
    'unique_id': '12345-monthly-from_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Monthly from grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_monthly_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_net_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_monthly_net_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Monthly net production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_net_production',
    'unique_id': '12345-monthly-net_production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_net_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Monthly net production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_monthly_net_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_net_production_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_monthly_net_production_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Monthly net production ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_production_pct',
    'unique_id': '12345-monthly-production_pct',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_net_production_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Monthly net production ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_monthly_net_production_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_monthly_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Monthly production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_production',
    'unique_id': '12345-monthly-production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Monthly production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_monthly_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_solar_powered_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_monthly_solar_powered_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Monthly solar powered ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_solar_powered',
    'unique_id': '12345-monthly-solar_powered',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_solar_powered_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Monthly solar powered ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_monthly_solar_powered_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_to_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_monthly_to_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Monthly to grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'monthly_to_grid',
    'unique_id': '12345-monthly-to_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_monthly_to_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Monthly to grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_monthly_to_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': None,
    'original_name': 'Production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'active_production',
    'unique_id': '12345-active-production',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'power',
      'friendly_name': 'Sense 12345 Production',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '500',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_weekly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Weekly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_usage',
    'unique_id': '12345-weekly-usage',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Weekly energy',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_weekly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_weekly_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Weekly from grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_from_grid',
    'unique_id': '12345-weekly-from_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Weekly from grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_weekly_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_net_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_weekly_net_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Weekly net production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_net_production',
    'unique_id': '12345-weekly-net_production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_net_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Weekly net production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_weekly_net_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_net_production_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_weekly_net_production_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weekly net production ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_production_pct',
    'unique_id': '12345-weekly-production_pct',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_net_production_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Weekly net production ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_weekly_net_production_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_weekly_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Weekly production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_production',
    'unique_id': '12345-weekly-production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Weekly production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_weekly_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_solar_powered_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_weekly_solar_powered_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Weekly solar powered ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_solar_powered',
    'unique_id': '12345-weekly-solar_powered',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_solar_powered_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Weekly solar powered ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_weekly_solar_powered_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_to_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_weekly_to_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Weekly to grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'weekly_to_grid',
    'unique_id': '12345-weekly-to_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_weekly_to_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Weekly to grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_weekly_to_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_yearly_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Yearly energy',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_usage',
    'unique_id': '12345-yearly-usage',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Yearly energy',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_yearly_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_yearly_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Yearly from grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_from_grid',
    'unique_id': '12345-yearly-from_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Yearly from grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_yearly_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_net_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_yearly_net_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Yearly net production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_net_production',
    'unique_id': '12345-yearly-net_production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_net_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Yearly net production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_yearly_net_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_net_production_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_yearly_net_production_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Yearly net production ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_production_pct',
    'unique_id': '12345-yearly-production_pct',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_net_production_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Yearly net production ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_yearly_net_production_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_yearly_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Yearly production',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_production',
    'unique_id': '12345-yearly-production',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Yearly production',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_yearly_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_solar_powered_ratio-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_yearly_solar_powered_ratio',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Yearly solar powered ratio',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_solar_powered',
    'unique_id': '12345-yearly-solar_powered',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_solar_powered_ratio-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'friendly_name': 'Sense 12345 Yearly solar powered ratio',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_yearly_solar_powered_ratio',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_to_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sense_12345_yearly_to_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': None,
    'original_name': 'Yearly to grid',
    'platform': 'sense',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'yearly_to_grid',
    'unique_id': '12345-yearly-to_grid',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensors[sensor.sense_12345_yearly_to_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'attribution': 'Data provided by Sense.com',
      'device_class': 'energy',
      'friendly_name': 'Sense 12345 Yearly to grid',
      'last_reset': '2024-01-01T01:01:00+00:00',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sense_12345_yearly_to_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
