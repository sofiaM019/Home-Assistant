# serializer version: 1
# name: test_sensor_platform[sensor.myauto_time_to_off-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myauto_time_to_off',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:timer-off-outline',
    'original_name': 'Time to Off',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac3-timetoOff',
    'unit_of_measurement': 'min',
  })
# ---
# name: test_sensor_platform[sensor.myauto_time_to_off-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myauto Time to Off',
      'icon': 'mdi:timer-off-outline',
      'unit_of_measurement': 'min',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myauto_time_to_off',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_platform[sensor.myauto_time_to_on-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myauto_time_to_on',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:timer-off-outline',
    'original_name': 'Time to On',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac3-timetoOn',
    'unit_of_measurement': 'min',
  })
# ---
# name: test_sensor_platform[sensor.myauto_time_to_on-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myauto Time to On',
      'icon': 'mdi:timer-off-outline',
      'unit_of_measurement': 'min',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myauto_time_to_on',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_time_to_off-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mytemp_time_to_off',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:timer-off-outline',
    'original_name': 'Time to Off',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac2-timetoOff',
    'unit_of_measurement': 'min',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_time_to_off-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'mytemp Time to Off',
      'icon': 'mdi:timer-off-outline',
      'unit_of_measurement': 'min',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mytemp_time_to_off',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_time_to_on-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mytemp_time_to_on',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:timer-outline',
    'original_name': 'Time to On',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac2-timetoOn',
    'unit_of_measurement': 'min',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_time_to_on-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'mytemp Time to On',
      'icon': 'mdi:timer-outline',
      'unit_of_measurement': 'min',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mytemp_time_to_on',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_a_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mytemp_zone_a_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:wifi-strength-2',
    'original_name': 'Zone A signal',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac2-z01-signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_a_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'mytemp Zone A signal',
      'icon': 'mdi:wifi-strength-2',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mytemp_zone_a_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_a_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mytemp_zone_a_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Zone A temperature',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac2-z01-temp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_a_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'mytemp Zone A temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mytemp_zone_a_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_a_vent-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mytemp_zone_a_vent',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:fan',
    'original_name': 'Zone A vent',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac2-z01-vent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_a_vent-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'mytemp Zone A vent',
      'icon': 'mdi:fan',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mytemp_zone_a_vent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_b_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mytemp_zone_b_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:wifi-strength-outline',
    'original_name': 'Zone B signal',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac2-z02-signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_b_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'mytemp Zone B signal',
      'icon': 'mdi:wifi-strength-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mytemp_zone_b_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_b_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mytemp_zone_b_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Zone B temperature',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac2-z02-temp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_b_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'mytemp Zone B temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mytemp_zone_b_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_b_vent-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.mytemp_zone_b_vent',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:fan',
    'original_name': 'Zone B vent',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac2-z02-vent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.mytemp_zone_b_vent-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'mytemp Zone B vent',
      'icon': 'mdi:fan',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.mytemp_zone_b_vent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '50',
  })
# ---
# name: test_sensor_platform[sensor.myzone_time_to_off-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_time_to_off',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:timer-outline',
    'original_name': 'Time to Off',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-timetoOff',
    'unit_of_measurement': 'min',
  })
# ---
# name: test_sensor_platform[sensor.myzone_time_to_off-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Time to Off',
      'icon': 'mdi:timer-outline',
      'unit_of_measurement': 'min',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_time_to_off',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_sensor_platform[sensor.myzone_time_to_on-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_time_to_on',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:timer-off-outline',
    'original_name': 'Time to On',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-timetoOn',
    'unit_of_measurement': 'min',
  })
# ---
# name: test_sensor_platform[sensor.myzone_time_to_on-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Time to On',
      'icon': 'mdi:timer-off-outline',
      'unit_of_measurement': 'min',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_time_to_on',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_3_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_3_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:wifi-strength-1',
    'original_name': 'Zone 3 signal',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z03-signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_3_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone 3 signal',
      'icon': 'mdi:wifi-strength-1',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_3_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_3_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_3_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Zone 3 temperature',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z03-temp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_3_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'myzone Zone 3 temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_3_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_3_vent-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_3_vent',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:fan-off',
    'original_name': 'Zone 3 vent',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z03-vent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_3_vent-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone 3 vent',
      'icon': 'mdi:fan-off',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_3_vent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_4_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_4_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:wifi-strength-3',
    'original_name': 'Zone 4 signal',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z04-signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_4_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone 4 signal',
      'icon': 'mdi:wifi-strength-3',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_4_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '75',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_4_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_4_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Zone 4 temperature',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z04-temp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_4_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'myzone Zone 4 temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_4_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_4_vent-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_4_vent',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:fan-off',
    'original_name': 'Zone 4 vent',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z04-vent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_4_vent-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone 4 vent',
      'icon': 'mdi:fan-off',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_4_vent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_5_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_5_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:wifi-strength-4',
    'original_name': 'Zone 5 signal',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z05-signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_5_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone 5 signal',
      'icon': 'mdi:wifi-strength-4',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_5_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_5_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_5_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Zone 5 temperature',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z05-temp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_5_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'myzone Zone 5 temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_5_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_5_vent-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_5_vent',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:fan-off',
    'original_name': 'Zone 5 vent',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z05-vent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_5_vent-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone 5 vent',
      'icon': 'mdi:fan-off',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_5_vent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_closed_with_sensor_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_closed_with_sensor_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:wifi-strength-outline',
    'original_name': 'Zone closed with Sensor signal',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z02-signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_closed_with_sensor_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone closed with Sensor signal',
      'icon': 'mdi:wifi-strength-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_closed_with_sensor_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_closed_with_sensor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_closed_with_sensor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Zone closed with Sensor temperature',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z02-temp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_closed_with_sensor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'myzone Zone closed with Sensor temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_closed_with_sensor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_closed_with_sensor_vent-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_closed_with_sensor_vent',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:fan-off',
    'original_name': 'Zone closed with Sensor vent',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z02-vent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_closed_with_sensor_vent-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone closed with Sensor vent',
      'icon': 'mdi:fan-off',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_closed_with_sensor_vent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_open_with_sensor_signal-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_open_with_sensor_signal',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:wifi-strength-2',
    'original_name': 'Zone open with Sensor signal',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z01-signal',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_open_with_sensor_signal-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone open with Sensor signal',
      'icon': 'mdi:wifi-strength-2',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_open_with_sensor_signal',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_open_with_sensor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_open_with_sensor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Zone open with Sensor temperature',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z01-temp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_open_with_sensor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'myzone Zone open with Sensor temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_open_with_sensor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_open_with_sensor_vent-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.myzone_zone_open_with_sensor_vent',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:fan',
    'original_name': 'Zone open with Sensor vent',
    'platform': 'advantage_air',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'uniqueid-ac1-z01-vent',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_platform[sensor.myzone_zone_open_with_sensor_vent-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'myzone Zone open with Sensor vent',
      'icon': 'mdi:fan',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.myzone_zone_open_with_sensor_vent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100',
  })
# ---
